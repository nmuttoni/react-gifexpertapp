{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cat","handleSubmit","type","value","placeholder","onChange","target","handleInputChange","getGifs","categoria","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAAY,SAACC,GAAD,OAVD,SAACA,GAClBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,KAKWO,CAAaL,IAA1C,SACI,uBACIM,KAAK,OACLC,MAAQV,EACRW,YAAc,oBACdC,SAAU,SAACT,GAAD,OAnBI,SAACA,GACvBF,EAAcE,EAAMU,OAAOH,OAkBEI,CAAkBX,S,+BC3B1CY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAEtB,ECHwB,SAAEA,GAE1B,MAA0BjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAXAC,qBAAW,WACRxB,EAAQC,GACNwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDhByBK,CAAa1B,GAAtCoB,EAAP,EAAOA,QAAeP,EAAtB,EAAgBN,KAEhB,OACI,qCACI,oBAAIS,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAESA,GADAA,EAAIC,aEb5BgB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEI8C,EAAWnB,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,CAEAA,UAAWA,GADNA,Y,MCbzB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7285669e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategorias(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {(event) => handleSubmit(event)}>\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                placeholder= {\"Ingrese un valor.\"}\r\n                onChange={(event) => handleInputChange(event)}\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=Uo7IO27UtIDEbh8bV0UD7tXjsYeUgOJa`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n\r\n    const {loading, data: images} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img }\r\n                            />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    // //Reemplaza al componentDidMount. Es decir se usa para que se ejecute solo cuando el componente se renderiza la primera vez.\r\n    useEffect( () => {\r\n       getGifs(categoria)\r\n        .then (imgs =>  {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n    }, [categoria]); //Esto hace que si la categoria cambia, vuelve a ejecutar el useEffect.\r\n    \r\n    return state;\r\n}    \r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n            {\r\n                categorias.map(categoria =>\r\n                    <GifGrid \r\n                    key={categoria}\r\n                    categoria={categoria} />\r\n                )\r\n            }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}